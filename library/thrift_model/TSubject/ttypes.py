#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys

from thrift.TRecursive import fix_spec
from thrift.Thrift import TType
from thrift.transport import TTransport

all_structs = []


class Handedness(object):
    NONE = 0
    RIGHT = 1
    LEFT = 2
    BOTH = 3

    _VALUES_TO_NAMES = {
        0: "NONE",
        1: "RIGHT",
        2: "LEFT",
        3: "BOTH",
    }

    _NAMES_TO_VALUES = {
        "NONE": 0,
        "RIGHT": 1,
        "LEFT": 2,
        "BOTH": 3,
    }


class Sex(object):
    NONE = 0
    MALE = 1
    FEMALE = 2

    _VALUES_TO_NAMES = {
        0: "NONE",
        1: "MALE",
        2: "FEMALE",
    }

    _NAMES_TO_VALUES = {
        "NONE": 0,
        "MALE": 1,
        "FEMALE": 2,
    }


class TSubject(object):
    """
    Attributes:
     - id
     - code
     - name
     - birthday
     - sex
     - email
     - phoneNumber
     - handedness
    """


    def __init__(self, id=None, code=None, name=None, birthday=None, sex=None, email=None, phoneNumber=None, handedness=None,):
        self.id = id
        self.code = code
        self.name = name
        self.birthday = birthday
        self.sex = sex
        self.email = email
        self.phoneNumber = phoneNumber
        self.handedness = handedness

    def read(self, iprot):
        if iprot._fast_decode is not None and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None:
            iprot._fast_decode(self, iprot, [self.__class__, self.thrift_spec])
            return
        iprot.readStructBegin()
        while True:
            (fname, ftype, fid) = iprot.readFieldBegin()
            if ftype == TType.STOP:
                break
            if fid == 1:
                if ftype == TType.I64:
                    self.id = iprot.readI64()
                else:
                    iprot.skip(ftype)
            elif fid == 2:
                if ftype == TType.STRING:
                    self.code = iprot.readString().decode('utf-8') if sys.version_info[0] == 2 else iprot.readString()
                else:
                    iprot.skip(ftype)
            elif fid == 3:
                if ftype == TType.STRING:
                    self.name = iprot.readString().decode('utf-8') if sys.version_info[0] == 2 else iprot.readString()
                else:
                    iprot.skip(ftype)
            elif fid == 4:
                if ftype == TType.I32:
                    self.birthday = iprot.readI32()
                else:
                    iprot.skip(ftype)
            elif fid == 5:
                if ftype == TType.I32:
                    self.sex = iprot.readI32()
                else:
                    iprot.skip(ftype)
            elif fid == 6:
                if ftype == TType.STRING:
                    self.email = iprot.readString().decode('utf-8') if sys.version_info[0] == 2 else iprot.readString()
                else:
                    iprot.skip(ftype)
            elif fid == 7:
                if ftype == TType.STRING:
                    self.phoneNumber = iprot.readString().decode('utf-8') if sys.version_info[0] == 2 else iprot.readString()
                else:
                    iprot.skip(ftype)
            elif fid == 8:
                if ftype == TType.I32:
                    self.handedness = iprot.readI32()
                else:
                    iprot.skip(ftype)
            else:
                iprot.skip(ftype)
            iprot.readFieldEnd()
        iprot.readStructEnd()

    def write(self, oprot):
        if oprot._fast_encode is not None and self.thrift_spec is not None:
            oprot.trans.write(oprot._fast_encode(self, [self.__class__, self.thrift_spec]))
            return
        oprot.writeStructBegin('TSubject')
        if self.id is not None:
            oprot.writeFieldBegin('id', TType.I64, 1)
            oprot.writeI64(self.id)
            oprot.writeFieldEnd()
        if self.code is not None:
            oprot.writeFieldBegin('code', TType.STRING, 2)
            oprot.writeString(self.code.encode('utf-8') if sys.version_info[0] == 2 else self.code)
            oprot.writeFieldEnd()
        if self.name is not None:
            oprot.writeFieldBegin('name', TType.STRING, 3)
            oprot.writeString(self.name.encode('utf-8') if sys.version_info[0] == 2 else self.name)
            oprot.writeFieldEnd()
        if self.birthday is not None:
            oprot.writeFieldBegin('birthday', TType.I32, 4)
            oprot.writeI32(self.birthday)
            oprot.writeFieldEnd()
        if self.sex is not None:
            oprot.writeFieldBegin('sex', TType.I32, 5)
            oprot.writeI32(self.sex)
            oprot.writeFieldEnd()
        if self.email is not None:
            oprot.writeFieldBegin('email', TType.STRING, 6)
            oprot.writeString(self.email.encode('utf-8') if sys.version_info[0] == 2 else self.email)
            oprot.writeFieldEnd()
        if self.phoneNumber is not None:
            oprot.writeFieldBegin('phoneNumber', TType.STRING, 7)
            oprot.writeString(self.phoneNumber.encode('utf-8') if sys.version_info[0] == 2 else self.phoneNumber)
            oprot.writeFieldEnd()
        if self.handedness is not None:
            oprot.writeFieldBegin('handedness', TType.I32, 8)
            oprot.writeI32(self.handedness)
            oprot.writeFieldEnd()
        oprot.writeFieldStop()
        oprot.writeStructEnd()

    def validate(self):
        return

    def __repr__(self):
        L = ['%s=%r' % (key, value)
             for key, value in self.__dict__.items()]
        return '%s(%s)' % (self.__class__.__name__, ', '.join(L))

    def __eq__(self, other):
        return isinstance(other, self.__class__) and self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not (self == other)
all_structs.append(TSubject)
TSubject.thrift_spec = (
    None,  # 0
    (1, TType.I64, 'id', None, None, ),  # 1
    (2, TType.STRING, 'code', 'UTF8', None, ),  # 2
    (3, TType.STRING, 'name', 'UTF8', None, ),  # 3
    (4, TType.I32, 'birthday', None, None, ),  # 4
    (5, TType.I32, 'sex', None, None, ),  # 5
    (6, TType.STRING, 'email', 'UTF8', None, ),  # 6
    (7, TType.STRING, 'phoneNumber', 'UTF8', None, ),  # 7
    (8, TType.I32, 'handedness', None, None, ),  # 8
)
fix_spec(all_structs)
del all_structs
